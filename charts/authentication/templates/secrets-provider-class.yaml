apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
{{- if .Values.vault }}
  name: {{ .Values.vault.secretProviderClassName | default (printf "%s-%s" .Release.Name "secret-provider-class") | lower }}
{{- else }}
  name: {{ .Chart.Name }}
{{- end }}
spec:
  provider: aws
  parameters:
    region: us-east-1
{{- if .Values.vault }}
    objects: |
      {{- range .Values.vault.secrets }}
      - objectName: "{{ .objectName }}"
        objectType: "{{ .objectType }}"
        objectEncoding: "{{ .objectEncoding }}"
        jmesPath:
        {{- range .jmesPath }}
          - path: "{{ .path }}"
            objectAlias: "{{ .objectAlias }}"
        {{- end }}
      {{- end }}

  secretObjects:
    {{- range .Values.vault.secretObjects }}
    - secretName: {{ .secretName }}
      type: {{ .type }}
      data:
        {{- range .data }}
        - objectName: "{{ .objectName  }}"
          key: "{{ .key }}"
        {{- end }}
    {{- end }}
{{- end }}


  {{- define "secretVolume" }}
{{- if .Values.vault }}
- name: {{ .Values.vault.volumeName | default "secrets-store-inline" }}
  csi:
    driver: secrets-store.csi.k8s.io
    readOnly: true
    volumeAttributes:
      secretProviderClass: {{ .Values.vault.secretProviderClassName | default (printf "%s-%s" .Release.Name "secret-provider-class" ) | lower }}
{{- end }}
  {{- end -}}

  {{- define "secretVolumeMount" }}
{{- if .Values.vault }}
- mountPath: {{ .Values.vault.secretsDir | default "/secrets" }}
  name: {{ .Values.vault.volumeName | default "secrets-store-inline" }}
  readOnly: true
{{- end }}
  {{- end }}
